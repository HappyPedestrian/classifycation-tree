var A=Object.defineProperty;var b=Object.getOwnPropertySymbols;var M=Object.prototype.hasOwnProperty,H=Object.prototype.propertyIsEnumerable;var g=(t,s,h)=>s in t?A(t,s,{enumerable:!0,configurable:!0,writable:!0,value:h}):t[s]=h,f=(t,s)=>{for(var h in s||(s={}))M.call(s,h)&&g(t,h,s[h]);if(b)for(var h of b(s))H.call(s,h)&&g(t,h,s[h]);return t};(function(t,s){typeof exports=="object"&&typeof module!="undefined"?module.exports=s(require("vue")):typeof define=="function"&&define.amd?define(["vue"],s):(t=typeof globalThis!="undefined"?globalThis:t||self,t["classify-tree"]=s(t.Vue))})(this,function(t){"use strict";const s=t.defineComponent({inheritAttrs:!1,props:{template:{type:Function},data:{}},setup(){},components:{},data(){return{}},computed:{},watch:{},mounted(){this.$emit("mounted")},methods:{},render:e=>t.h("div",[e.template(e.data)])});function h(e,i,r){console.log("\u521B\u5EFA\u4E86observer",e);const d=new MutationObserver(i);return d.observe(e,f({attributes:!0,childList:!0,subtree:!0,characterData:!0},r)),d}var F="",y=(e,i)=>{const r=e.__vccOpts||e;for(const[d,p]of i)r[d]=p;return r};const O=t.defineComponent({name:"ClassifyTreeNode",props:{nodeData:{default:()=>({label:"",key:"",slotScope:"default",expanded:!1})},parent:{default:()=>null},mode:{default:"vertical"}},setup(e,i){var o,l;const{nodeData:r}=t.toRefs(e),d=t.inject("slots"),p=t.inject("connectLineOption"),a=t.inject("treeNodeProp"),n={label:(a==null?void 0:a.label)||"label",children:(a==null?void 0:a.children)||"children",key:(a==null?void 0:a.key)||"children"};let c={};return(o=r==null?void 0:r.value)!=null&&o.connectLineOption?c=f({},(l=r==null?void 0:r.value)==null?void 0:l.connectLineOption):c=p,t.provide("slots",d||i.slots),t.provide("connectLineOption",c),{slots:d,nodeConnectLineOption:t.ref(c),treeNodeProp:t.ref(n)}},components:{TemplateContainer:s},data(){return{treeNodeElRect:{},connectLinePaths:[],arrowPositions:[],svgStyle:{height:"0",width:"0"},mutationObserver:null,expanded:!1}},computed:{nodeStyle(){return typeof this.nodeData.style=="object"?f({},this.nodeData.style):null},nodeChildrenConnectLineOption(){const e=this.nodeConnectLineOption;return this.nodeData[this.treeNodeProp.children]?this.nodeData[this.treeNodeProp.children].map(i=>{let r=i.connectLineOption||{};return f(f({},e),r)}):[]},showChildren(){return this.nodeData[this.treeNodeProp.children]&&this.nodeData[this.treeNodeProp.children].length>0&&this.expanded!==!1}},watch:{showChildren(e){var i;!this.mutationObserver&&e?(this.$nextTick(()=>{this.bindMutationObserver()}),this.mutationObserverCallback(),setTimeout(()=>{this.mutationObserverCallback()},500)):((i=this.mutationObserver)==null||i.disconnect(),this.mutationObserverCallback(),setTimeout(()=>{this.mutationObserverCallback()},500))},mode(){this.mutationObserverCallback(),setTimeout(()=>{this.mutationObserverCallback()},500)},"nodeData.expanded"(e){this.expanded=e!==!1}},created(){this.expanded=this.nodeData.expanded!==!1},mounted(){this.bindMutationObserver(),this.mutationObserverCallback()},beforeUnmount(){var e;(e=this==null?void 0:this.mutationObserver)!=null&&e.disconnect&&this.mutationObserver.disconnect(),this.$nextTick(()=>{this.mutationObserverCallback()})},methods:{bindMutationObserver(){if(this.mutationObserver)return;const e=this.$refs.childNodesBoxRef;e&&(this.mutationObserver=h(e,()=>{this.$nextTick(()=>{setTimeout(()=>{this.mutationObserverCallback()},500)})}))},mutationObserverCallback(){var d,p,a;this.connectLinePaths=[],this.arrowPositions=[];const e=this.$refs.treeNodeRef;if(!e)return;this.treeNodeElRect=e.getBoundingClientRect();const i=this.$refs.childNodesBoxRef;let r=(d=this.nodeConnectLineOption)!=null&&d.lineHeight?this.nodeConnectLineOption.lineHeight:"20px";if(i){const n=i.getBoundingClientRect();this.mode==="vertical"?Object.assign(this.svgStyle,{height:r,width:n.width}):this.mode==="horizon"&&Object.assign(this.svgStyle,{height:n.height,width:r});const c=i.children,o=Number.parseInt(r);for(let l of c){const C=l.getBoundingClientRect();if(this.mode==="vertical"){const k=n.left+n.width/2,m=C.left+C.width/2,u=k-m;this.connectLinePaths.push(`M${n.width/2} 0 Q ${n.width/2} ${o/2} ${n.width/2-u/2} ${o/2} Q ${m-n.left} ${o/2} ${m-n.left} ${o-4}`),(p=this.nodeConnectLineOption)!=null&&p.showArrow&&this.arrowPositions.push(`${m-n.left} ${o}`)}else if(this.mode==="horizon"){const k=n.top+n.height/2,m=C.top+C.height/2,u=k-m;this.connectLinePaths.push(`M 0 ${n.height/2} Q ${o/2} ${n.height/2} ${o/2} ${n.height/2-u/2} Q ${o/2} ${m-n.top} ${o-4} ${m-n.top}`),(a=this.nodeConnectLineOption)!=null&&a.showArrow&&this.arrowPositions.push(`${o} ${m-n.top}`)}}}this.$nextTick(()=>{this.$emit("updateConnectLine")})},getChildStyle(e){const i=this.nodeData[this.treeNodeProp.children]?this.nodeData[this.treeNodeProp.children].length:0;return this.mode==="vertical"?{marginRight:e<i-1?"15px":null}:{marginBottom:e<i-1?"15px":null}},onExpandClick(){console.log("expand-click"),this.nodeData.expanded===!1?this.expanded=this.nodeData.expanded=!0:this.expanded=this.nodeData.expanded=!1,console.log("expand-click value:",this.nodeData.expanded)},updateConnectLine(){this.$nextTick(()=>{this.mutationObserverCallback()})}}}),L=e=>(t.pushScopeId("data-v-3cfbcb43"),e=e(),t.popScopeId(),e),N={class:"classify-tree-node-default"},$={class:"classify-tree-node-expand-default"},w=L(()=>t.createElementVNode("span",{class:"minus"},null,-1)),B={key:0,class:"minus add"},P=["height","width"],D=["d","stroke","stroke-width"],T=["d","stroke","fill","transform"],E={key:0,class:"classify-tree-children",ref:"childNodesBoxRef"};function S(e,i,r,d,p,a){const n=t.resolveComponent("TemplateContainer"),c=t.resolveComponent("ClassifyTreeNode",!0);return t.openBlock(),t.createElementBlock("div",{class:t.normalizeClass(["classify-tree-node-wraper",e.mode==="vertical"?"classify-tree-node-wraper-vertical":e.mode==="horizon"?"classify-tree-node-wraper-horizon":null])},[t.createElementVNode("div",{class:t.normalizeClass(["classify-tree-node-content",e.mode==="vertical"?"classify-tree-node-content-vertical":e.mode==="horizon"?"classify-tree-node-content-horizon":null]),ref:"treeNodeRef"},[t.createElementVNode("div",{class:t.normalizeClass(["classify-tree-node",e.nodeData.class]),style:t.normalizeStyle(e.nodeStyle),ref:"treeNodeContentRef"},[e.slots&&e.slots[e.nodeData.slotScope||"default"]?(t.openBlock(),t.createBlock(n,{key:0,template:e.slots[e.nodeData.slotScope||"default"],data:{node:e.nodeData,parent:e.parent}},null,8,["template","data"])):t.renderSlot(e.$slots,e.nodeData.slotScope||"default",{key:1,data:{node:e.nodeData,parent:e.parent}},()=>[t.createElementVNode("div",N,t.toDisplayString(e.nodeData[e.treeNodeProp.label]),1)],!0)],6),t.createElementVNode("div",{class:t.normalizeClass(["classify-tree-node-expand",e.mode==="vertical"?"classify-tree-node-expand-vertical":e.mode==="horizon"?"classify-tree-node-expand-horizon":null]),onClick:i[0]||(i[0]=(...o)=>e.onExpandClick&&e.onExpandClick(...o))},[e.slots&&e.slots.expand&&e.nodeData[e.treeNodeProp.children]&&e.nodeData[e.treeNodeProp.children].length>0?(t.openBlock(),t.createBlock(n,{key:0,template:e.slots.expand,data:e.nodeData.expanded},null,8,["template","data"])):e.nodeData[e.treeNodeProp.children]&&e.nodeData[e.treeNodeProp.children].length>0?t.renderSlot(e.$slots,"default",{key:1,data:e.expanded},()=>[t.createElementVNode("div",$,[w,e.expanded===!1?(t.openBlock(),t.createElementBlock("span",B)):t.createCommentVNode("",!0)])],!0):t.createCommentVNode("",!0)],2),e.showChildren?(t.openBlock(),t.createElementBlock("div",{key:0,class:t.normalizeClass(["diliver",e.mode==="vertical"?"diliver-vertical":e.mode==="horizon"?"diliver-horizon":null])},[(t.openBlock(),t.createElementBlock("svg",{height:e.svgStyle.height,width:e.svgStyle.width,version:"1.1",xmlns:"http://www.w3.org/2000/svg"},[(t.openBlock(!0),t.createElementBlock(t.Fragment,null,t.renderList(e.connectLinePaths,(o,l)=>(t.openBlock(),t.createElementBlock("path",{d:o,key:l,stroke:e.nodeChildrenConnectLineOption[l]&&e.nodeChildrenConnectLineOption[l].lineColor||"black",fill:"transparent","stroke-width":e.nodeChildrenConnectLineOption[l]&&e.nodeChildrenConnectLineOption[l].lineWidth||2,"stroke-linecap":"round"},null,8,D))),128)),(t.openBlock(!0),t.createElementBlock(t.Fragment,null,t.renderList(e.arrowPositions,(o,l)=>(t.openBlock(),t.createElementBlock("path",{key:l,d:`M ${o} m 0 -4 l 3 -3 l -3 7 l -3 -7 l 3 3`,stroke:e.nodeChildrenConnectLineOption[l]&&e.nodeChildrenConnectLineOption[l].lineColor||"black",fill:e.nodeChildrenConnectLineOption[l]&&e.nodeChildrenConnectLineOption[l].lineColor||"black","stroke-width":"0.2",transform:e.mode==="horizon"?`rotate(-90, ${o})`:void 0,"stroke-linejoin":"miter"},null,8,T))),128))],8,P))],2)):t.createCommentVNode("",!0),t.createVNode(t.Transition,{name:"child-contain-box",onAfterLeave:e.updateConnectLine,onAfterEnter:e.updateConnectLine},{default:t.withCtx(()=>[e.showChildren?(t.openBlock(),t.createElementBlock("div",E,[t.createVNode(t.TransitionGroup,{name:"children-box"},{default:t.withCtx(()=>[(t.openBlock(!0),t.createElementBlock(t.Fragment,null,t.renderList(e.nodeData[e.treeNodeProp.children],(o,l)=>(t.openBlock(),t.createBlock(c,{key:o[e.treeNodeProp.key],"node-data":o,parent:e.nodeData,style:t.normalizeStyle(e.getChildStyle(l)),mode:e.mode,onUpdateConnectLine:e.mutationObserverCallback},null,8,["node-data","parent","style","mode","onUpdateConnectLine"]))),128))]),_:1})],512)):t.createCommentVNode("",!0)]),_:1},8,["onAfterLeave","onAfterEnter"])],2)],2)}var z=y(O,[["render",S],["__scopeId","data-v-3cfbcb43"]]),I="";const R=t.defineComponent({name:"ClassifyTree",props:{nodeList:{default:()=>[]},mode:{default:"vertical"},connectLineOption:{default:()=>({})},treeNodeProps:{default:()=>({label:"label",children:"children",key:"key"})}},setup(e,i){var a,n,c;const{connectLineOption:r,treeNodeProps:d}=t.toRefs(e),p={label:((a=d.value)==null?void 0:a.label)||"label",children:((n=d.value)==null?void 0:n.children)||"children",key:((c=d.value)==null?void 0:c.key)||"key"};return t.provide("slots",i.slots),t.provide("connectLineOption",r),t.provide("treeNodeProp",p),{treeNodeProp:t.ref(p)}},components:{ClassifyTreeNode:z,TemplateContainer:s},data(){return{}},computed:{},watch:{},mounted(){},methods:{getChildStyle(e){return this.mode==="vertical"?{marginRight:e<this.nodeList.length-1?"15px":null}:{marginBottom:e<this.nodeList.length-1?"15px":null}}}});function V(e,i,r,d,p,a){const n=t.resolveComponent("ClassifyTreeNode");return t.openBlock(),t.createElementBlock("div",{class:t.normalizeClass(["classify-tree-wraper",e.mode==="vertical"?"classify-tree-wraper-vertical":e.mode==="horizon"?"classify-tree-wraper-horizon":null])},[t.createVNode(t.TransitionGroup,{name:"tree"},{default:t.withCtx(()=>[(t.openBlock(!0),t.createElementBlock(t.Fragment,null,t.renderList(e.nodeList,(c,o)=>(t.openBlock(),t.createBlock(n,{"node-data":c,style:t.normalizeStyle(e.getChildStyle(o)),mode:e.mode,key:c[e.treeNodeProp.key]},null,8,["node-data","style","mode"]))),128))]),_:1})],2)}var j=y(R,[["render",V],["__scopeId","data-v-0b75d67a"]]);return j});
